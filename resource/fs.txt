//Phone
#version 330

// Default color buffer location is 0
// If you create framebuffer your own, you need to take care of it
layout(location=0) out vec4 color;
				
uniform sampler2D text;
uniform vec3 ambient = vec3(0.2, 0.2, 0.2);
uniform vec3 eyePos = vec3(25, 25, 25);
in vec3 vNormal;						//三角形的每一個點都經過 fs.txt 內轉換
in vec2 vUV;							//flat in vec2 vUV;	 不內插
in vec3 vPos;
void main()
{
	
	vec3 c = texture(text, vUV).xyz;			//.xyz ->萃取rgb, vec4 改成 vec3
	vec3 l = normalize(vec3(1, 1, 0));
	vec3 e_hat = normalize(eyePos - vPos);					//eyePos - vPos
	vec3 r = reflect(-l, vNormal);
	float spec = pow(max(dot(e_hat, r), 0.0), 30);
	float diffuse = max(dot(vNormal, l), 0);	//Lamber diffuse model 
	color = vec4(c*diffuse+ambient*c+spec*vec3(1, 1, 1), 1.0);
}

/*
#version 330

// Default color buffer location is 0
// If you create framebuffer your own, you need to take care of it
layout(location=0) out vec4 color;

uniform sampler2D text;

in vec3 vNormal;
in vec2 vUV;

void main()
{
	vec3 c = texture(text, vUV).xyz;
	//vec3 l = normalize(vec3(1,1,0));
	//float diffuse = max(dot(vNormal,l),0);
    color = vec4(c*max(dot(vNormal, vec3(0,1,0)),0),1.0);
	//color = vec4(c*diffuse+ambient*c,1.0);
}
*/
/* OK
#version 330

// Default color buffer location is 0
// If you create framebuffer your own, you need to take care of it
layout(location=0) out vec4 color;
				
uniform sampler2D text;

in vec3 vNormal;						//三角形的每一個點都經過 fs.txt 內轉換
in vec2 vUV;							//flat in vec2 vUV;	 不內插

void main()
{
	//color=texture(text, vUV);			//存取 vUV 的顏色，輸出
	vec4 c=texture(text, vUV);			//存取 vUV 的顏色，輸出
	color = c*max(dot(vNormal, vec3(0, 1, 0)), 0);
	
}
*/
//光放在{0, 1, 0}
//deffuse: n dot l
/* OK
//diffuse
#version 330

// Default color buffer location is 0
// If you create framebuffer your own, you need to take care of it
layout(location=0) out vec4 color;
				
uniform sampler2D text;

in vec3 vNormal;						//三角形的每一個點都經過 fs.txt 內轉換
in vec2 vUV;							//flat in vec2 vUV;	 不內插

void main()
{
	
	vec4 c=texture(text, vUV);			//存取 vUV 的顏色，輸出
	color = c*max(dot(vNormal, vec3(0, 1, 0)), 0);
	
}
*/
/* OK
//diffuse + ambient
#version 330

// Default color buffer location is 0
// If you create framebuffer your own, you need to take care of it
layout(location=0) out vec4 color;
				
uniform sampler2D text;
uniform vec3 ambient = vec3(0.2, 0.2, 0.2);
in vec3 vNormal;						//三角形的每一個點都經過 fs.txt 內轉換
in vec2 vUV;							//flat in vec2 vUV;	 不內插

void main()
{
	
	vec3 c=texture(text, vUV).xyz;			//.xyz ->萃取rgb, vec4 改成 vec3
	vec3 l = normalize(vec3(1, 1, 0));
	float diffuse = max(dot(vNormal, l), 0);
	color = vec4(c*diffuse+ambient*c, 1.0);
	
}
*/
/*
//diffuse + ambient + spec

#version 330

// Default color buffer location is 0
// If you create framebuffer your own, you need to take care of it
layout(location=0) out vec4 color;
uniform vec3 ambient = vec3(0.2, 0.2, 
				
uniform sampler2D text;);
in vec3 vNormal;						0.2);
uniform vec3 eyePos = vec3(10, 10, 10//三角形的每一個點都經過 fs.txt 內轉換
in vec2 vUV;							//flat in vec2 vUV;	 不內插

void main()
{
	
	vec3 c = texture(text, vUV).xyz;			//.xyz ->萃取rgb, vec4 改成 vec3
	vec3 l = normalize(vec3(1, 1, 0));
	vec3 e_hat = normalize(eyePos);					//eyePos - vPos
	vec3 r = reflect(1, vNormal);
	florat spec = pow(dot(e_hat, r), 30);
	float diffuse = max(dot(vNormal, vec3(0, 1, 0), 0);
	color = vec4(c*diffuse + ambient*c+spec*vec3(1, 1, 1), 1.0));
	
}
*/